# Default values for banzai-predictor-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cr.yandex/crpifuncdv6j95trtdq8/banzai-predictor-gateway
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

affinity: {}

config:
  DB_HOST: banzai-predictor-gateway-postgresql
  DB_NAME: building_predictor
  DB_PORT: "5432"
  DB_USERNAME: app
  DB_PASSWORD: password
  PORT: 80
  RABBIT_HOST: rabbitmq.rabbitmq
  RABBIT_PORT: 5672
  RABBIT_USERNAME: user
  RABBIT_PASSWORD: pass

postgresql:
  primary:
    nodeSelector:
      target: apps
    tolerations:
      - key: "target"
        operator: "Equal"
        value: "apps"
        effect: "NoSchedule"
    persistence:
      enabled: true
      size: 30Gi
  auth:
    database: building_predictor
    password: "password"
    username: "app"

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "512m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod-dns"
  tls:
    - hosts:
        - api.banzai-predict.site
      secretName: letsencrypt-dns
  hosts:
    - host: api.banzai-predict.site
      paths:
        - path: /
          pathType: Prefix


nodeSelector:
  target: apps

tolerations:
  - key: "target"
    operator: "Equal"
    value: "apps"
    effect: "NoSchedule"